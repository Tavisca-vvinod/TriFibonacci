using System;

namespace ConsoleApp1
{
    public class FibGeneratorValidator
    {
        public static bool validateFibonacci(int[] numbers)
        {
            bool valid = true;
            for (int i = 3; i < numbers.Length; i++)
            {
                if (numbers[i] != numbers[i - 1] + numbers[i - 2] + numbers[i - 3])
                {
                    valid = false;
                    break;
                }
            }
            return valid;
        }
        public static int[] generateFibonacci(int[] numbers)
        {
            for (int i = 3; i < numbers.Length; i++)
            {
                numbers[i] = numbers[i - 1] + numbers[i - 2] + numbers[i - 3];

            }
            return numbers;
        }
        public static int sumOfOtherTwoNumbers(int[] numbers, int i)
        {
            int sum = 0;
            for (int j = 0; j <= 2; j++)
            {
                if (j == i) { continue; }
                sum = sum + numbers[j];
            }
            return sum;
        }
        public static int indexOf(int[] numbers)
        {
            for (int i = 0; i < numbers.Length; i++)
            {
                if (numbers[i] == -1) { return i; }
            }
            return 0;
        }
    }

    public class FibCompleter
    {
        public static int complete(int[] numbers)
        {
            int indexOfMissingNumber = FibGeneratorValidator.indexOf(numbers);
            int missingDigit = -1;
            if (indexOfMissingNumber >= 3)
            {
                int[] generatedFibonacci = FibGeneratorValidator.generateFibonacci(numbers);
                for (int i = 0; i < generatedFibonacci.Length; i++)
                {
                    if (generatedFibonacci[i] != numbers[i] && i != indexOfMissingNumber)
                    {
                        return -1;
                    }
                }
                missingDigit = generatedFibonacci[indexOfMissingNumber];
            }
            else
            {
                numbers[indexOfMissingNumber] = numbers[3] - (FibGeneratorValidator.sumOfOtherTwoNumbers(numbers, indexOfMissingNumber));
                if (FibGeneratorValidator.validateFibonacci(numbers))
                {
                    missingDigit = numbers[indexOfMissingNumber];
                }
            }
            if (missingDigit > 0)
            {
                return missingDigit;
            }
            return -1;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("{1,2,3,-1} ::: 6 --> " + (FibCompleter.complete(new int[] { -1, 7, 8, 1000000 }) == 999985 ? "PASS" : "FAIL"));
            Console.WriteLine("{10, 20, 30, 60, -1 , 200} ::: 110 --> " + (FibCompleter.complete(new int[] { -1, 7, 8, 1000000 }) == 999985 ? "PASS" : "FAIL"));
            Console.WriteLine("{1, 2, 3, 5, -1}  ::: -1 -->  " + (FibCompleter.complete(new int[] { -1, 7, 8, 1000000 }) == 999985 ? "PASS" : "FAIL"));
            Console.WriteLine("{1, 1, -1, 2, 3} ::: -1 --> " + (FibCompleter.complete(new int[] { -1, 7, 8, 1000000 }) == 999985 ? "PASS" : "FAIL"));
            Console.WriteLine("{-1, 7, 8, 1000000}  ::: 999985 --> " + (FibCompleter.complete(new int[] { -1, 7, 8, 1000000 }) == 999985 ? "PASS" : "FAIL"));
            Console.ReadKey();
        }
    }
}
